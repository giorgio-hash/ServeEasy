---
version: '3.4'
services:

  GestioneCliente:
    image: gchirico1/gestione_cliente:latest
    container_name: GestioneCliente
    restart: always
    environment:
      SERVER_PORT: 8080
      SERVER_ADDRESS: 0.0.0.0
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/serveeasy
      SPRING_KAFKA_BOOTSTRAP-SERVERS: broker:29092 #plaintext_internal
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      start_period: 40s
    expose:
      - "8080"
    ports:
      - "8081:8080"


  GestioneComanda:
    image: gchirico1/gestione_comanda:latest
    container_name: GestioneComanda
    restart: always
    environment:
      SERVER_PORT: 8080
      SERVER_ADDRESS: 0.0.0.0
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/serveeasy
      SPRING_KAFKA_BOOTSTRAP-SERVERS: broker:29092 #plaintext_internal
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      start_period: 40s
    expose:
      - "8080"
    ports:
      - "8080:8080"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:29092"
    depends_on:
      - "broker"

  db:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: serveeasy
      MARIADB_USER: user
      MARIADB_PASSWORD: user
    healthcheck:
      test: ["CMD","healthcheck.sh","--su-mysql","--connect","--innodb_initialized"]
      interval: 30s
      retries: 3
      timeout: 30s
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./db/db_data/:/var/lib/mysql
    ports:
      - "3306:3306"

  
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
    - "3307:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    depends_on:
      db:
        condition: service_healthy
